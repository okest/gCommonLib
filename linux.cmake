if(ARCH STREQUAL "aarch64")
  set(CMAKE_SYSTEM_PROCESSOR "aarch64")
  set(CMAKE_C_COMPILER "/usr/bin/aarch64-linux-gnu-gcc")
  set(CMAKE_CXX_COMPILER "/usr/bin/aarch64-linux-gnu-g++")
  set(CMAKE_FIND_ROOT_PATH "/usr/aarch64-linux-gnu")
  set(CMAKE_CXX_FLAGS "-march=armv8-a -mtune=cortex-a53 -fPIC -fconcepts")
  set(CMAKE_C_FLAGS "-march=armv8-a -mtune=cortex-a53 -fPIC")
else()
  set(CMAKE_SYSTEM_PROCESSOR "x86_64")
  set(CMAKE_C_COMPILER "/usr/bin/gcc")
  set(CMAKE_CXX_COMPILER "/usr/bin/g++")
  set(CMAKE_CXX_FLAGS "-fPIC -fconcepts")
  set(CMAKE_C_FLAGS "-fPIC")
  set(CMAKE_FIND_ROOT_PATH "/usr")
endif()
message(STATUS "Configuring for ${CMAKE_SYSTEM_PROCESSOR}")
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_HOST_LINUX ON)


set(CMAKE_C_FLAGS_RELEASE "${COMPILER_RELEASE_FLAGS}")
set(CMAKE_C_FLAGS_DEBUG "${COMPILER_DEBUG_FLAGS}")
set(CMAKE_C_FLAGS_PROFILE "${COMPILER_DEBUG_FLAGS} -finstrument-functions")
set(CMAKE_C_FLAGS_COVERAGE "${COMPILER_DEBUG_FLAGS} -fprofile-arcs -ftest-coverage")

set(CMAKE_CXX_FLAGS_RELEASE "${COMPILER_RELEASE_FLAGS}")
set(CMAKE_CXX_FLAGS_DEBUG "${COMPILER_DEBUG_FLAGS}")
set(CMAKE_CXX_FLAGS_PROFILE "${COMPILER_DEBUG_FLAGS} -finstrument-functions")
set(CMAKE_CXX_FLAGS_COVERAGE "${COMPILER_DEBUG_FLAGS} -fprofile-arcs -ftest-coverage")

set(CMAKE_EXE_LINKER_FLAGS_PROFILE "-ftest-coverage -fprofile-arcs -lprofiling")
set(CMAKE_SHARED_LINKER_FLAGS_COVERAGE "-ftest-coverage -fprofile-arcs -lprofiling")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
